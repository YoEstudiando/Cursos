1Ô∏è‚É£ Responde las siguientes preguntas en la secci√≥n de comentarios:
-¬øQu√© es una variable y para qu√© sirve?
R:--la variable es un espacio hueco,
-¬øpor qu√© es hueco?,--simple porque ah√≠ se pueden guardar cosas,
-¬øpero hueco y espacio no es lo mismo?
--jaja No,por ejemplo tu casa es un espacio pero no est√° hueco, hay cosas dentro,
-¬øY donde est√° ese espacio? 
--:) est√° en la memoria de tu computadora, puedes pensar en ello como una burbuja invisible ocupando
     un lugar dentro de computadora.
 -¬øY para que quiero una espacio invisible en mi computadora?,
 --para guardar informaci√≥n
 -ooooh¬øque tipo de informaci√≥n?
 --puedes guardar numeros, palabras, validacion, condiciones o nada.
¬øc√≥mo que nada?
jaja Ni yo entiendo eso todavia
-aaah jajaja :).

-¬øCu√°l es la diferencia entre declarar e inicializar una variable?
R:Declarar es tener un espacio reservado en memoria para guardar algo e inicializar es la valor guardado 
    en el espacio reservado.
    
¬øCu√°l es la diferencia entre sumar n√∫meros y concatenar strings?
R:Con el operador + nos permite sumar numeros cuando los usamos para numeros
 y en los sting nos permite concatenar dos o mas cadenas de texto.
¬øCu√°l operador me permite sumar o concatenar?
R: el operador de matematica +(m√°s);
2Ô∏è‚É£ Determina el nombre y tipo de dato para almacenar en variables la siguiente informaci√≥n:
Nombre:String
Apellido:String
Nombre de usuario en Platzi:String
Edad:number
Correo electr√≥nico:String
Mayor de edad:validacion(booleano)
Dinero ahorrado:number
Deudas:number
3Ô∏è‚É£ Traduce a c√≥digo JavaScript las variables del ejemplo anterior y deja tu c√≥digo en los comentarios.
var nombre = Ricardo
var apellido = Donoso
var usuarioPlatzi = Ricardo Donoso
var edad = 19
var correroElectronico =rndm2002@gmail.com
var mayorDeEdad =  
var dineroAhorrado = 0
var deudas = 0
4Ô∏è‚É£ Calcula e imprime las siguientes variables a partir de las variables del ejemplo anterior:
Nombre completo (nombre y apellido)
Dinero real (dinero ahorrado menos deudas)
 var nombre = "Ricardo Nicolas";
 var apellido = "Donoso Mu√±oz";
var ahorrado = 0;
var deudas = 0;
var resultado = ahorrado - deudas;
console.log(`Hola soy ${nombre} ${apellido} un gusto :) y tengo ${resultado} pesos`)

Funciones
1Ô∏è‚É£ Responde las siguientes preguntas en la secci√≥n de comentarios:
¬øQu√© es una funci√≥n?
R:Una funcion es una serie instruccion que te ayudan a reducir las lineas de codigo
    tambien simplifica repetir varias lineas de codigo una y otra vez,
    nace para "automatizar" codigo repetido, compacta codigo.
    Reutiliza bloques de c√≥digo.

¬øCu√°ndo me sirve usar una funci√≥n en mi c√≥digo?
R:Cuando haya un codigo que se va a repetir mucho y dar una mayor especificacion a una variable
    de lo que debe de hacer.
¬øCu√°l es la diferencia entre par√°metros y argumentos de una funci√≥n?
R: par√°metro son las condiciones de la funcion y los argumentos son los valores dados por 
    nosotros o el usario, diferencias, el parametro lo eleige el programador y 
    los argumentos el mismo o terceros.

2Ô∏è‚É£ Convierte el siguiente c√≥digo en una funci√≥n, pero, cambiando cuando
sea necesario las variables constantes por par√°metros y argumentos en una funci√≥n:
const name = "Juan David";
const lastname = "Castro Gallego";
const completeName = name + lastname;
const nickname = "juandc";

console.log("Mi nombre es " + completeName + ", pero prefiero que me digas " + nickname + ".");
    YO
function miNombre(nombre, apellido,apodo)
{
    console.log (`Soy ${nombre} ${apellido}, tambien me puedes llamar ${apodo}`);
};


Condicionales


1Ô∏è‚É£ Responde las siguientes preguntas en la secci√≥n de comentarios:
¬øQu√© es un condicional?
R:Es un validacion hacia un bloque de codigo de si se cumple o no. if(1<2){return true}else{return false};
¬øQu√© tipos de condicionales existen en JavaScript y cu√°les son sus diferencias?
R:if ejecuta un sentencia si la condicion es verdadera
 si es falsa, no mostrar√° nada a menos que le especifiquemos que lo haga
 y switch evalua por condiciones switch(expresion)
 {case valor1:"muestra algo si valor1 es true break; case valor2:"muetras esto si otro fall√≥" break;}
¬øPuedo combinar funciones y condicionales?
2Ô∏è‚É£ Replica el comportamiento del siguiente c√≥digo que usa la sentencia switch utilizando if, else y else if:
const tipoDeSuscripcion = "Basic";

switch (tipoDeSuscripcion) {
   case "Free":
       console.log("Solo puedes tomar los cursos gratis");
       break;
   case "Basic":
       console.log("Puedes tomar casi todos los cursos de Platzi durante un mes");
       break;
   case "Expert":
       console.log("Puedes tomar casi todos los cursos de Platzi durante un a√±o");
       break;
   case "ExpertPlus":
       console.log("T√∫ y alguien m√°s pueden tomar TODOS los cursos de Platzi durante un a√±o");
       break;
}

YO

var tipoDeSuscripcion = "Expert";
if (tipoDeSuscripcion == "Free")

 {
    console.log("Solo puedes tomar los cursos gratis");
}else
    if(tipoDeSuscripcion == "Basic")
    {
        console.log("Puedes tomar casi todos los cursos de Platzi durante un mes");
    }
    else 
        if(tipoDeSuscripcion == "Expert")
        {
            console.log("Puedes tomar casi todos los cursos de Platzi durante un a√±o");
        }
        else
            if(tipoDeSuscripcion== "ExpertPlus")
            {
                console.log("T√∫ y alguien m√°s pueden tomar TODOS los cursos de Platzi durante un a√±o");
            }
            else
                {
                    console.log("Tenemos un descuento del 30%,Aprovecha Ya!.")
                }


3Ô∏è‚É£ Replica el comportamiento de tu condicional anterior con if, else y else if, 
pero ahora solo con if (sin else ni else if).
üí° Bonus: si ya eres una experta o experto en el lenguaje, te desaf√≠o a comentar
 c√≥mo replicar este comportamiento con arrays u objetos y un solo condicional. üòè
            YO
         function tipoDeSuscripcion(suscripcion)
        {
            if(suscripcion == "Free")
            {
                return("Solo puedes tomar los cursos gratis");
            }
            if(suscripcion =="Basic")
            {
                return("Puedes tomar casi todos los cursos de Platzi durante un mes");
            }
            if(suscripcion =="Expert")
            {
                return("Puedes tomar casi todos los cursos de Platzi durante un a√±o");
            }
            if(suscripcion =="ExpertoPlus")
            {
                return("T√∫ y alguien m√°s pueden tomar TODOS los cursos de Platzi durante un a√±o");
            }
        }

Ciclos

1Ô∏è‚É£ Responde las siguientes preguntas en la secci√≥n de comentarios:

¬øQu√© es un ciclo?

R:Es una condicion que se repite hasta que devuelve false, es un codigo que se va a usar
mucho en un proyecto cual es muy repetitivo, por lo que se crean ciclos donde se usa las condiciones del ciclo
y esta itera hasta que devuelve false;

¬øQu√© tipos de ciclos existen en JavaScript?

R:for while do while continue for...in for...of labeled

¬øQu√© es un ciclo infinito y por qu√© es un problema?

R: es una mala progrmacion donde no se indica un final claro y se sigue sumando hasta el infinito, el problema
    es que al no tener un fin consumira mas y mas recuerso cuanto mas tiempo pase saturando el servido donde
    se aloja la paginas o proyecto.
¬øPuedo mezclar ciclos y condicionales?
R:Si hay tipos de ciclos que necesitas condicionar para que se pueda iterar y en otras no las necesitas.
2Ô∏è‚É£ Replica el comportamiento de los siguientes ciclos for utilizando ciclos while:
for (let i = 0; i < 5; i++) {
    console.log("El valor de i es: " + i);
}

YO

let i = 0;
while(i<5)
{
    console.log("El valor de i es: " + i);
    i++;
}


for (let i = 10; i >= 2; i--) {
    console.log("El valor de i es: " + i);
}

YO

let i = 10;
while(i >=2)
{
    console.log("El valor de i es: " + i);
    i--;
}




3Ô∏è‚É£ Escribe un c√≥digo en JavaScript que le pregunte a los usuarios cu√°nto es 2 + 2.
 Si responden bien, mostramos un mensaje de felicitaciones, pero si responden mal, volvemos a empezar.

let respuesta = false
while(!respuesta)
{
    let suma = prompt("Cuanto es 2 + +2")
    if(suma == 4)
    {
        alert("Es correcto")
        respuesta=true;
    }
}

PROFESOR
let respuesta;
while(respuesta != '4')
{
    let pregunta = prompt("cuanto es 2 + 2")
    respuesta = pregunta;
}

Listas
1Ô∏è‚É£ Responde las siguientes preguntas en la secci√≥n de comentarios:
¬øQu√© es un array?
R:(Una lista de elementos) Es una lista de valor number string objetos vacios booleano,
 los cuales con la lista puede recorrar y mutar o en otras modificar la lista a tu antojo :).
¬øQu√© es un objeto?
R: el objeto es una entidad independiente cual tiene sus propiedad y tipos.
    por ejemplo una taza, color, el dise√±o, tama√±o, etc.

¬øCu√°ndo es mejor usar objetos o arrays?

R:Si queremos guardar una variabale con datos del mismo tipo o sea
 numeros caracteres,booleanos etc, usamos arrays[] porque podemos acceder
 a cada uno de ellos y son del mimos tipo.
 Y cuando queramos guardar variables y sus valores usamos objetos{}
PORFESOR: Arrays cuando lo que haremos en un elemento es lo mismo que en todos los demas (la regla se puede incumplir).
Mientras que un objeto cuando los nombres de cada elemento son importante para nuestro algoritmo.
¬øPuedo mezclar arrays con objetos o incluso objetos con arrays?
R: si
2Ô∏è‚É£ Crea una funci√≥n que pueda recibir cualquier array como par√°metro e imprima su primer elemento.

let numero = [0,1,2,3,4,"hola",];
function numeroNumero(elige)
{
	console.log(elige[5])
}
numeroNumero(numero)

3Ô∏è‚É£ Crea una funci√≥n que pueda recibir cualquier array como par√°metro e imprima todos sus elementos uno por uno (no se vale imprimir el array completo).

let numero = [0,1,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,]
function numeroNumero(tipo)
{
	for(let i = 0; i < tipo.length;i++)
	{
		console.log(`${i + 1} ${tipo[i]}`)
	}
}
numeroNumero(numero)

4Ô∏è‚É£ Crea una funci√≥n que pueda recibir cualquier objeto como par√°metro e imprima todos sus elementos uno por uno (no se vale imprimir el objeto completo).

let salud= {nombre:"Ricardo",a√±os:19,pasion:"Voleibol"}
let compa√±ero= {nombre:"Simon",a√±os:20,pasion:"Voleibol"}
function saludamos(equipo)
{
	for(i in equipo)
	{
		console.log(equipo[i])
	}
}
saludamos(salud)

//                par√°metros
function persona(nombre,apellido)
{
    console.log(`yo soy ${nombre} ${apellido}`)
}
//          Argumentos
persona("Ricardo", "Donoso")